# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

blueprint_name: spack-wrfv4-intel-wps

vars:
  project_id:  ## Set GCP Project ID Here ##
  deployment_name: spack-wrfv4-intel
  region: us-central1
  zone: us-central1-c
  
deployment_groups:
- group: primary
  modules:
  - id: network1
    source: modules/network/vpc

  - id: hpc_dash
    source: modules/monitoring/dashboard

  ## Install Scripts
  - id: spack-setup
    source: community/modules/scripts/spack-setup
    settings:
      install_dir: /opt/apps/spack
      spack_ref: develop

  - id: spack-execute
    source: community/modules/scripts/spack-execute
    use: [spack-setup]
    settings:
      log_file: /var/log/spack.log
      data_files:
      - destination: /tmp/slurm-external-config.yaml
        content: |
          packages:
            slurm:
              externals:
                - spec: slurm@21-08-8-2
                  prefix: /usr/local
              buildable: False
            krb5:
              permissions:
                read: world
                write: user
      - destination: /share/spack/wrfv4_c2_env.yaml
        content: |
          spack:
            definitions:
            - compilers:
              - intel-oneapi-compilers
            - mpis:
              - intel-oneapi-mpi@2021.11.0
            - mpi_packages:
              - wrf@4.4 build_type=dm+sm compile_type=em_real nesting=basic ~pnetcdf target=skylake_avx512
              - wps@4.3.1 target=skylake_avx512
            specs:
            - matrix:
              - - $mpis
              - - $%compilers
            - matrix:
              - - $mpi_packages
              - - $%compilers
              - - $^mpis
      - destination: /share/spack/wrfv4_c2d_env.yaml
        content: |
          spack:
            definitions:
            - compilers:
              - intel-oneapi-compilers
            - mpis:
              - intel-oneapi-mpi@2021.11.0
            - mpi_packages:
              - wrf@4.4 build_type=dm+sm compile_type=em_real nesting=basic ~pnetcdf target=haswell
              - wps@4.3.1 target=haswell
            specs:
            - matrix:
              - - $mpis
              - - $%compilers
            - matrix:
              - - $mpi_packages
              - - $%compilers
              - - $^mpis
      commands: |
        # Un-comment and update mirror_url to install from spack cache
        spack mirror add --scope=site wrf_cache gs://spack-cache-wrfv4
        spack buildcache keys --install --trust
         if ! spack mirror list | grep -q gcs_cache; then
           spack mirror add --scope site gcs_cache gs://spack-cache-wrfv4
         fi
        
        spack config --scope=site add "config:install_tree:padded_length:256"
        #spack mirror add --scope=site wrf_cache gs://spack-cache-wrfv4
        #spack gpg init
        #spack gpg create "Prashant Kulkarni" pskulkarni@google.com


        spack config --scope defaults add config:build_stage:/opt/apps/spack/spack-stage
        spack config --scope defaults add -f /tmp/projections-config.yaml
        spack config --scope site add -f /tmp/slurm-external-config.yaml

        spack install intel-oneapi-compilers
        spack load intel-oneapi-compilers
        spack compiler find --scope site

        if ! spack env list | grep -q wrfv4-c2; then
          spack env create wrfv4-c2 /share/spack/wrfv4_c2_env.yaml
          spack env activate wrfv4-c2
          spack concretize
          spack install
        fi

        if ! spack env list | grep -q wrfv4-c2d; then
          spack env create wrfv4-c2d /share/spack/wrfv4_c2d_env.yaml
          spack env activate wrfv4-c2d
          spack concretize
          spack install
        fi

  - id: controller-setup
    source: modules/scripts/startup-script
    settings:
      runners:
      - type: shell
        destination: remove_lustre_client.sh
        content: |
          #!/bin/bash
          rm /etc/yum.repos.d/lustre-client.repo
      - $(spack-execute.spack_runner)
      - type: shell
        destination: wrfv4_setup.sh
        content: |
          #!/bin/bash
          source /opt/apps/spack/share/spack/setup-env.sh
          chmod -R a+rwX /opt/apps/spack/var/spack/environments/wrfv4-c2
          chmod -R a+rwX /opt/apps/spack/var/spack/environments/wrfv4-c2d
          mkdir -p /opt/apps/wrfv4
          chmod a+rwx /opt/apps/wrfv4
          cd /opt/apps/wrfv4
          wget --no-verbose https://www2.mmm.ucar.edu/wrf/users/benchmark/v44/v4.4_bench_conus12km.tar.gz
          tar -xzf v4.4_bench_conus12km.tar.gz
      - type: data
        destination: /opt/apps/wrfv4/submit_wrfv4.sh
        content: |
          #!/bin/bash
          #SBATCH -N 2
          #SBATCH --ntasks-per-node 30

          source /opt/apps/spack/share/spack/setup-env.sh
          if [ "$SLURM_JOB_PARTITION" == "compute" ]; then
              spack env activate wrfv4-c2
          else;
              spack env activate wrfv4-c2d
          fi

          # Check that wrf.exe exists
          which wrf.exe
          cd $SLURM_SUBMIT_DIR
          cp /opt/apps/v4.4_bench_conus12km/* .
          WRF=`spack location -i wrf`
          ln -s $WRF/run/* .
          scontrol show hostnames ${SLURM_JOB_NODELIST} > hostfile

          mpirun -n 60 -hostfile hostfile -ppn ${SLURM_NTASKS_PER_NODE} wrf.exe

  - id: compute_nodeset
    source: community/modules/compute/schedmd-slurm-gcp-v6-nodeset
    use: [network1]
    settings:
      node_count_dynamic_max: 20
      bandwidth_tier: tier_1_enabled
      disk_type: pd-ssd
      disk_size_gb: 100

  - id: compute_partition
    source: community/modules/compute/schedmd-slurm-gcp-v6-partition
    use: [compute_nodeset]
    settings:
      partition_name: compute

  - id: c2d_node_group
    source: community/modules/compute/schedmd-slurm-gcp-v6-nodeset
    use: [network1]
    settings:
      node_count_dynamic_max: 20
      machine_type: c2d-standard-112
      bandwidth_tier: tier_1_enabled
      disk_type: pd-ssd
      disk_size_gb: 500

  - id: c2d_partition
    source: community/modules/compute/schedmd-slurm-gcp-v6-partition
    use: [c2d_node_group]
    settings:
        partition_name: c2d

  - id: slurm_controller
    source: community/modules/scheduler/schedmd-slurm-gcp-v6-controller
    use: [network1, compute_partition, c2d_partition]
    settings:
      machine_type: c2-standard-16
      disable_controller_public_ips: false
      controller_startup_scripts_timeout: 0
      controller_startup_script: $(controller-setup.startup_script)
